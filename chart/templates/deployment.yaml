apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "regcred-injector.fullname" . }}
  labels:
    {{- include "regcred-injector.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "regcred-injector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "regcred-injector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "regcred-injector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: tls
          secret:
            secretName: {{ include "regcred-injector.fullname" .}}
            items:
              - key: cert
                path: regcred-injector-crt.pem
              - key: key
                path: regcred-injector-key.pem
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVER_NAME
              value: {{ include "regcred-injector.fullname" . }}.{{ .Release.Namespace }}.svc.local
            - name: DOCKER_USERNAME
              value: {{ .Values.docker.username }}
            - name: DOCKER_REGISTRY
              value: "{{ .Values.docker.registry }}"
            - name: DOCKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "regcred-injector.fullname" .}}
                  key: password
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /status
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /status
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tls
              mountPath: "/certs"
              readOnly: true            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
